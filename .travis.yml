language: cpp

matrix:
  include:
    - name: GCC Debug
      os: linux
      dist: bionic
      compiler: gcc
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug"

    - name: GCC Release
      os: linux
      dist: bionic
      compiler: gcc
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release"

    - name: Clang Debug
      os: linux
      dist: bionic
      compiler: clang
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug"

    - name: Clang Release
      os: linux
      dist: bionic
      compiler: clang
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release"

    - name: VS Debug
      os: windows
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug"

    - name: VS Release
      os: windows
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release"

    - name: XCode Debug
      os: osx
      osx_image: xcode10.2
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug"

    - name: XCode Release
      os: osx
      osx_image: xcode10.2
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release"

    - name: Valgrind
      os: Linux
      dist: bionic
      compiler: gcc
      env: CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release"
      addons:
        apt:
          packages: valgrind
      after_script: valgrind ./test/unittest/unittest

install:
  # Download and install cmake 3.15
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.15/cmake-3.15.6-Linux-x86_64.tar.gz"
      mkdir -p ${TRAVIS_BUILD_DIR}/deps/cmake
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/deps/cmake
      export PATH=${TRAVIS_BUILD_DIR}/deps/cmake/bin:${PATH}
    fi

script:
  - mkdir build
  - cd build
  - cmake "$(CMAKE_FLAGS)" ..
  - cmake --build .
